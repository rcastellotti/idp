import subprocess
import time
import logging
import argparse
from threading import Thread
from common import cloud_traceroutes

parser = argparse.ArgumentParser(prog="traceroute")
parser.add_argument(
    "--verbose", "-v", help="verbose", action=argparse.BooleanOptionalAction
)
args = parser.parse_args()

if args.verbose:
    logging.getLogger().setLevel(logging.DEBUG)
    logging.getLogger("urllib3").setLevel(logging.WARNING)

else:
    logging.getLogger().setLevel(logging.INFO)

# run for 12 hours while also running iperf
args.asndb = "/home/rc/idp-castellotti-data/ipasn_20230315.dat"
args.region_file = "/home/rc/idp-castellotti/targets.csv"
args.directory = "/home/rc/idp-castellotti-data/traceroutes-iperf-5bks"

DURATION = 60 * 60 * 12
start_time = time.time()
end_time = start_time + DURATION

print(end_time)


def tr():
    """
    run the traceroutes
    """
    while time.time() < end_time:
        cloud_traceroutes(args.region_file, args.directory, args.asndb)
        time.sleep(1)


def iperf():
    """
    run `iperf -c 138.246.253.20 -p 5001 -u -b 5k`
    """
    while time.time() < end_time:
        subprocess.run(
            ["iperf", "-c", "138.246.253.20", "-p 5001", "-u", "-b 5k"], check=True
        )


if __name__ == "__main__":
    thread1 = Thread(target=tr)
    thread2 = Thread(target=iperf)
    thread1.start()
    thread2.start()
    thread2.join()
    thread1.join()
